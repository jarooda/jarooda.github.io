---
import { ClientRouter } from "astro:transitions"
import type { CollectionEntry } from "astro:content"
import { Image } from "astro:assets"
import BaseHead from "../components/shared/BaseHead.astro"
import Header from "../components/shared/Header.astro"
import Footer from "../components/shared/Footer.astro"
import FormattedDate from "../components/FormattedDate.astro"
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts"
import "../styles/base.css"

type AstroProps = CollectionEntry<"blog">
interface Props {
  posts: AstroProps[]
  header: string
}
const { posts, header } = Astro.props
const title = `${header} - ${SITE_TITLE}`
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={title} description={SITE_DESCRIPTION} />
    <ClientRouter />
  </head>
  <body>
    <Header />
    <main class="bg-white pt-20">
      <section class="mx-auto w-full lg:w-224 p-4 min-h-screen">
        <h1 class="w-max text-2xl md:text-5xl font-semibold mb-8">#{header}</h1>
        <ul class="flex flex-col justify-center gap-4">
          {
            posts.map((post) => (
              <li class=" w-full flex flex-col md:flex-row bg-white rounded-lg">
                <figure>
                  <Image
                    width={300}
                    height={150}
                    src={post.data.heroImage || ""}
                    alt={post.id}
                    class=" w-full md:w-[300px] rounded-tr-lg md:rounded-tr-none rounded-tl-lg md:rounded-bl-lg h-full object-cover object-center"
                    loading="lazy"
                  />
                </figure>
                <div class=" w-full p-4 flex flex-col gap-1 border-l md:border-l-0 md:border-t border-b border-r border-gray-400 md:rounded-tr-lg rounded-br-lg rounded-bl-lg md:rounded-bl-none">
                  <a href={`/blog/${post.id}/`}>
                    <h4 class=" text-xl font-bold hover:underline underline-offset-4">
                      {post.data.title}
                    </h4>
                  </a>
                  <p class=" font-semibold text-base md:text-sm">
                    <FormattedDate date={post.data.pubDate} />
                  </p>
                  <div class=" flex flex-col justify-between h-full">
                    <p class=" mt-2 text-base md:text-sm">
                      {" "}
                      {post.data.description}
                    </p>
                    <div class=" flex gap-2 my-2 flex-wrap">
                      {post.data.tags.map((tag: string) => (
                        <a
                          href={`/tags/${tag}`}
                          class="text-xs md:text-sm hover:underline underline-offset-2"
                        >
                          #{tag}
                        </a>
                      ))}
                    </div>
                  </div>
                </div>
              </li>
            ))
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
