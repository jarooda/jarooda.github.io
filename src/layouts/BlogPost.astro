---
import { ViewTransitions } from 'astro:transitions';
import { Image } from "astro:assets"
import type { CollectionEntry } from 'astro:content';
import { Icon } from 'astro-icon/components'
import BaseHead from '../components/BaseHead.astro';
import BlogHead from '../components/BlogHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import '../styles/base.css'
import '../styles/blogs.css'
import { SITE_TITLE } from '../consts';

type AstroProps = CollectionEntry<'blog'>['data'];
interface Props extends AstroProps {
  remark?: any;
  headings: {
    depth: number
    slug: string
    text: string
  }[]
}

const { title, description, pubDate, updatedDate, heroImage, metaImage, remark, headings, tags, otherUrl } = Astro.props;
const headerTitle = title + ' - ' + SITE_TITLE

const removeSRLabel = (text: string) => {
  const labelStart = text.indexOf('Section titled')
  return text.substring(0, labelStart)
}

const calculateMarginLeft = (depth: number) => {
  return `${2 * (depth - 1)}rem`
}

const isEnglish = tags.includes('english')
---

<html lang="en">
  <head>
    <link href="/themes/prism.css" rel="stylesheet" />
		<BaseHead title={ headerTitle } description={description} image={ metaImage || heroImage } />
    <BlogHead />
    <ViewTransitions />
	</head>

	<body>
		<Header hasSeparator={ false } />
		<main class=" pt-16">
			<article>
				<div>
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="hero" class=" w-full max-h-96 object-cover object-center" loading="eager" />}
				</div>
				<div class=" font-inter w-full lg:w-224 mx-auto p-4">
					<div class=" flex flex-col">
            <h1 class=" text-4xl font-bold text-center mt-1 md:mt-5">{title}</h1>
            <div class=" flex justify-center gap-2 my-2">
              {
                tags.map((tag: string) => (
                  <a href={ `/tags/${ tag }` } class="text-xs md:text-sm hover:underline underline-offset-2">
                    #{ tag }
                  </a>
                ))
              }
            </div>
						<div class=" mt-2 gap2 flex flex-col">
              <div class=" flex gap-1 items-center">
                <Icon name="mdi:calendar-multiselect" class="h-4 max-w-10" />
                <p class=" text-sm md:text-base">
                  <FormattedDate date={pubDate} />
                </p>
              </div>
              <div class=" flex gap-1 items-center">
                <Icon name="mdi:clock-time-two-outline" class="h-4 max-w-10" />
                <p class=" text-sm md:text-base">
                  <span>{
                    remark.minutesRead
                  }</span>
                </p>
              </div>
              {
                otherUrl && !isEnglish && (
                  <div class=" flex gap-1 items-center">
                    <p>âœ¨</p>
                    <a
                      href={ otherUrl }
                      class=" text-sm md:text-base text-green-900 font-semibold underline underline-offset-2 hover:text-green-700"
                    >ðŸ‡¬ðŸ‡§ Read in English</a>
                    <p>âœ¨</p>
                  </div>
                )
              }
              {
                otherUrl && isEnglish && (
                  <div class=" flex gap-1 items-center">
                    <p>âœ¨</p>
                    <a
                      href={ otherUrl }
                      class=" text-sm md:text-base text-green-900 font-semibold underline underline-offset-2 hover:text-green-700"
                    >ðŸ‡®ðŸ‡© Read in Indonesian</a>
                    <p>âœ¨</p>
                  </div>
                )
              }
						</div>
						<hr class=" my-3" />
					</div>
          <div class=" blog">
            <aside>
              <h1 class="font-semibold text-black">Contents</h1>
              <ul>
                {
                  headings.map(({ depth, slug, text }) => (
                    slug !== 'footnote-label' && <li style={{ marginLeft: calculateMarginLeft(depth) }} class=" list-inside">
                      <a href={`#${slug}`}>{removeSRLabel(text)}</a>
                    </li>
                  ))
                }
              </ul>
            </aside>
            <hr class=" my-3" />
            <astro-fenced-block>
              <astro-blog-img>
                <slot />
              </astro-blog-img>
            </astro-fenced-block>
          </div>
          {
            updatedDate && (
              <p class=" italic font-light text-sm md:text-base mt-1">
                Update: <FormattedDate date={updatedDate} />
              </p>
            )
          }
          <script
            src="https://utteranc.es/client.js"
            repo="jarooda/jarooda.github.io"
            issue-term="pathname"
            label="comment"
            theme="github-light"
            crossorigin="anonymous"
            async
          />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
