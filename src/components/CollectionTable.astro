---
interface Props {
  id: string;
  data: any[];
  renderKeys: string[];
}

const { id, data, renderKeys } = Astro.props;
const tableHeaders = renderKeys.map(key => 
  key.charAt(0).toUpperCase() + key.slice(1)
);
---

<div id={id} class="collection-table" style="display: none;">
  {data.length > 0 && (
    <div class="overflow-x-auto">
      <table class="w-full border-collapse border border-gray-300 dark:border-gray-600">
        <thead>
          <tr class="bg-gray-100 dark:bg-gray-800">
            {tableHeaders.map((header) => (
              <th class="border border-gray-300 dark:border-gray-600 px-4 py-2 text-left font-semibold">
                {header}
              </th>
            ))}
          </tr>
        </thead>
        <tbody>
          {data.map((item, index) => (
            <tr class={index % 2 === 0 ? "bg-gray-50 dark:bg-gray-900" : "bg-white dark:bg-gray-800"}>
              {renderKeys.map((key) => (
                <td class="border border-gray-300 dark:border-gray-600 px-4 py-2">
                  {item[key] || ""}
                </td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  )}
</div>
