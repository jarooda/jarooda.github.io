---
import Tag from './Tag.astro';
import { getIcon } from '../consts';

interface Props {
  title: string
  repo?: string
  demo?: string
  heroImage?: string
  stacks: string[]
  isFeatured: boolean
  index: number
}

const { title, heroImage, stacks = [], isFeatured, index, demo, repo } = Astro.props;
const featuredStacks = isFeatured ? stacks.slice(0, 3) : stacks;

let dynamicClasses = 'md:left-64';
switch (index) {
  case 1:
    dynamicClasses = 'top-32 md:left-32 xl:left-96 xl:-top-32';
    break;
  case 2:
    dynamicClasses = 'top-64 left-48 xl:left-128 xl:-top-64 order-first';
    break
  default:
    break;
}
---

<a
  href={ demo || repo }
  target="_blank"
  class={ ` w-full md:w-2/5 xl:w-96 bg-white border border-gray-200 rounded-lg shadow-lg group xl:rotate-6 xl:hover:rotate-0 transform transition-all xl:absolute ${ dynamicClasses }` }
>
  <img class=" rounded-t-lg" src={ heroImage } alt={ title } />
  <div class=" flex flex-col justify-between">
    <div class="p-4">
      <h2 class="md:text-xl text-base font-bold tracking-tight text-center sm:text-left text-gray-700">{ title }</h2>
    </div>
    <div class=" flex gap-2 px-4 pb-4 justify-center flex-wrap">
      {
        featuredStacks.map((stack) => (
          <Tag dark icon={ getIcon(stack) }>
            <p class="text-xs md:text-sm">
              { stack }
            </p>
          </Tag>
        ))
      }
    </div>
  </div>
</a>